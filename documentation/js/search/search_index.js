var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.134,1,1.347]],["body/controllers/AppController.html",[0,1.64,1,1.948,2,1.259,3,0.893,4,0.746,5,0.746,6,2.189,7,0.746,8,1.948,9,3.357,10,1.792,11,0.065,12,1.259,13,2.791,14,1.496,15,2.334,16,1.163,17,0.893,18,1.08,19,1.496,20,0.893,21,0.389,22,2.189,23,2.189,24,1.496,25,2.791,26,0.049,27,0.049]],["title/modules/AppModule.html",[28,1.134,29,1.347]],["body/modules/AppModule.html",[1,2.018,2,1.492,3,0.776,4,0.648,5,0.648,11,0.065,16,1.295,17,0.776,18,1.168,19,1.299,20,0.776,21,0.338,26,0.044,27,0.044,28,1.699,29,2.44,30,1.093,31,1.093,32,1.556,33,1.556,34,1.093,35,2.418,36,1.556,37,1.901,38,1.901,39,1.901,40,1.972,41,2.124,42,1.556,43,1.556,44,2.424,45,2.594,46,2.424,47,2.424]],["title/injectables/AppService.html",[18,0.672,48,1.134]],["body/injectables/AppService.html",[3,0.411,4,0.343,5,0.343,7,0.343,8,1.105,9,2.316,11,0.066,12,1.332,14,1.583,15,2.808,16,0.945,17,0.411,18,0.551,20,0.411,21,0.179,24,1.583,26,0.028,27,0.028,48,0.93,49,0.825,50,1.008,51,3.05,52,2.581,53,2.062,54,2.581,55,1.285,56,3.452,57,1.48,58,3.452,59,1.285,60,1.657,61,1.657,62,1.657,63,3.234,64,2.581,65,1.285,66,2.062,67,1.285,68,1.285,69,1.896,70,3.234,71,3.452,72,1.285,73,1.324,74,1.008,75,2.062,76,1.285,77,1.285,78,1.285,79,1.008,80,0.689,81,2.536,82,2.536,83,1.285,84,1.285,85,1.285,86,1.285,87,2.536,88,2.581,89,2.581,90,2.581,91,1.285,92,2.062,93,1.285,94,1.285,95,1.285,96,1.285,97,1.285,98,1.285,99,1.285,100,2.062,101,2.844,102,2.062,103,2.954,104,1.285,105,2.062,106,1.285,107,1.008,108,1.285]],["title/coverage.html",[109,2.177]],["body/coverage.html",[0,1.609,1,1.453,5,0.725,6,2.127,11,0.063,18,0.725,21,0.378,26,0.048,27,0.048,34,1.224,48,1.609,50,2.127,57,1.032,107,3.609,109,1.741,110,2.712,111,2.712,112,2.712,113,3.985,114,2.712,115,2.127,116,2.712,117,1.741,118,3.567,119,2.127,120,2.712,121,2.127,122,1.224,123,2.127,124,1.453,125,2.127,126,1.032,127,2.712,128,2.712,129,2.712,130,2.712]],["title/dependencies.html",[31,1.359,131,1.662]],["body/dependencies.html",[11,0.066,17,0.844,21,0.489,26,0.047,27,0.047,31,1.19,73,2.248,74,2.068,132,2.638,133,2.638,134,1.693,135,2.638,136,3.931,137,2.638,138,2.638,139,2.638,140,1.693,141,2.638,142,2.638,143,2.638,144,2.638,145,2.638,146,2.638,147,2.638,148,2.638,149,2.638,150,2.068,151,2.638,152,2.638,153,2.638,154,2.638,155,2.638,156,2.638,157,2.638,158,3.502,159,2.638,160,2.068,161,2.638]],["title/miscellaneous/functions.html",[162,1.136,163,2.363]],["body/miscellaneous/functions.html",[7,0.958,11,0.057,26,0.057,27,0.057,34,2.041,119,2.812,162,1.922,163,2.812,164,3.586]],["title/index.html",[7,0.566,165,2.119,166,2.119]],["body/index.html",[4,0.548,11,0.064,26,0.039,27,0.039,80,1.099,109,1.316,167,2.05,168,2.05,169,2.942,170,2.05,171,2.05,172,2.05,173,2.05,174,2.05,175,2.05,176,1.099,177,3.441,178,2.05,179,2.05,180,2.05,181,2.05,182,4.367,183,2.05,184,2.05,185,2.05,186,4.269,187,2.05,188,2.05,189,2.942,190,2.05,191,2.05,192,2.05,193,2.05,194,2.942,195,2.942,196,2.05,197,2.05,198,2.05,199,2.942,200,2.05,201,2.942,202,2.942,203,2.05,204,2.05,205,2.05,206,2.307,207,2.942,208,2.942,209,2.05,210,2.05,211,2.05,212,2.05,213,2.05,214,2.05,215,2.05,216,2.05,217,2.05,218,2.05,219,2.05,220,2.05,221,2.05,222,2.05,223,2.05,224,1.316,225,1.608,226,2.05,227,2.05,228,2.05,229,2.05,230,1.608]],["title/modules.html",[30,1.53]],["body/modules.html",[11,0.056,26,0.056,27,0.056,29,1.879,30,1.582,40,1.582,206,3.287,231,4.191,232,4.191,233,4.191]],["title/controllers/newsController.html",[0,1.134,124,1.347]],["body/controllers/newsController.html",[0,0.855,2,0.855,3,0.607,4,0.507,5,0.507,7,0.507,8,1.49,10,1.217,11,0.064,12,0.855,14,1.016,16,1.16,17,0.607,20,0.607,21,0.264,22,1.487,23,1.487,24,1.016,26,0.037,27,0.037,57,0.721,60,1.217,61,1.217,62,1.217,69,2.113,79,2.18,122,1.635,123,1.487,124,1.49,126,1.252,140,1.217,176,1.942,234,1.896,235,3.268,236,2.581,237,1.896,238,1.896,239,2.18,240,3.163,241,4.033,242,3.625,243,2.78,244,2.78,245,1.896,246,2.78,247,2.78,248,1.896,249,1.896,250,1.896,251,1.896,252,1.896,253,1.896,254,2.78,255,2.78,256,1.896,257,1.487,258,1.487,259,1.896,260,1.896,261,1.896,262,1.896,263,1.896,264,1.896,265,1.896,266,1.896,267,1.896,268,1.896]],["title/classes/newsDTO.html",[21,0.351,122,1.134]],["body/classes/newsDTO.html",[3,0.849,4,0.709,5,0.709,7,0.709,10,1.703,11,0.066,12,1.196,15,2.695,16,1.125,20,0.849,21,0.49,26,0.047,27,0.047,57,1.009,121,2.08,122,1.585,140,1.703,150,2.08,269,2.652,270,2.256,271,3.942,272,2.652,273,2.652,274,3.514,275,3.942,276,4.197,277,2.652,278,2.652,279,2.652]],["title/modules/newsModule.html",[28,1.134,40,1.134]],["body/modules/newsModule.html",[2,1.472,3,0.76,4,0.635,5,0.635,11,0.065,16,1.346,17,0.76,18,1.161,19,1.273,20,0.76,21,0.331,26,0.044,27,0.044,28,1.681,30,1.072,31,1.072,32,1.525,33,1.525,34,1.072,35,2.393,36,1.525,40,2.045,41,2.095,42,1.525,43,1.525,45,1.863,124,1.997,126,1.653,134,1.525,257,1.863,280,1.863,281,1.863,282,2.376,283,2.376,284,3.263]],["title/injectables/newsService.html",[48,1.134,126,0.957]],["body/injectables/newsService.html",[3,0.458,4,0.382,5,0.382,7,0.382,8,1.203,11,0.067,12,1.013,14,1.203,16,1.158,17,0.458,18,0.838,19,0.767,20,0.458,21,0.2,24,1.827,26,0.03,27,0.03,48,1.013,49,0.919,51,2.173,57,0.854,60,1.442,61,1.442,62,1.442,69,1.779,73,0.919,80,0.767,81,1.122,82,1.122,87,2.966,101,2.173,117,1.442,122,1.415,125,1.122,126,0.854,134,0.919,160,1.122,176,0.767,224,0.919,225,1.122,235,2.173,236,2.173,239,1.122,240,1.761,258,1.122,285,2.245,286,1.431,287,3.617,288,2.771,289,1.431,290,2.245,291,1.431,292,2.245,293,2.245,294,2.245,295,1.431,296,2.245,297,1.431,298,1.431,299,1.431,300,1.431,301,1.431,302,1.431,303,1.431,304,1.431,305,1.431,306,1.431,307,1.431,308,1.431,309,2.771,310,1.431,311,1.431,312,2.771,313,1.431,314,2.771,315,1.431,316,1.431,317,1.431,318,1.431,319,1.431,320,1.431,321,1.431,322,1.431,323,1.431,324,2.245,325,1.431,326,1.431,327,1.431,328,1.431,329,1.431,330,1.431,331,1.431,332,2.245,333,2.245,334,1.431,335,2.245]],["title/overview.html",[336,2.659]],["body/overview.html",[2,1.238,11,0.061,18,1.136,21,0.383,26,0.048,27,0.048,28,1.238,29,2.427,30,1.238,31,1.238,32,1.761,33,1.761,34,1.238,35,1.761,36,1.761,37,2.151,38,2.151,39,2.151,40,2.082,41,2.307,42,1.761,43,1.761,49,1.761,126,1.525,280,2.151,281,2.151,336,2.151,337,4.008,338,2.743]],["title/properties.html",[131,1.662,270,1.934]],["body/properties.html",[11,0.065,26,0.056,27,0.056,176,1.879,224,2.252,230,2.75,270,2.252,339,3.507,340,3.507,341,3.507]],["title/miscellaneous/variables.html",[162,1.136,342,2.363]],["body/miscellaneous/variables.html",[7,0.85,11,0.063,26,0.053,27,0.053,57,1.21,80,1.705,115,2.494,117,2.536,162,1.705,342,2.494,343,3.181,344,3.181,345,3.181,346,3.181,347,3.181,348,3.181,349,3.181,350,3.181,351,3.181,352,3.181,353,3.181,354,3.181,355,3.181]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":340,"title":{},"body":{"properties.html":{}}}],["0.0.7",{"_index":135,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":118,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":113,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":114,"title":{},"body":{"coverage.html":{}}}],["04:58",{"_index":303,"title":{},"body":{"injectables/newsService.html":{}}}],["1",{"_index":338,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":307,"title":{},"body":{"injectables/newsService.html":{}}}],["1.1.19",{"_index":133,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":143,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":321,"title":{},"body":{"injectables/newsService.html":{}}}],["16.0.3",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":337,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":246,"title":{},"body":{"controllers/newsController.html":{}}}],["2023",{"_index":302,"title":{},"body":{"injectables/newsService.html":{}}}],["27h",{"_index":301,"title":{},"body":{"injectables/newsService.html":{}}}],["3.0.2",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":331,"title":{},"body":{"injectables/newsService.html":{}}}],["5.2.5",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a8a2f6474743742063ba405c564bc28",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":136,"title":{},"body":{"dependencies.html":{}}}],["aashish",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"injectables/newsService.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":214,"title":{},"body":{"index.html":{}}}],["api",{"_index":240,"title":{},"body":{"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["api_key",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apidata",{"_index":324,"title":{},"body":{"injectables/newsService.html":{}}}],["apikey",{"_index":316,"title":{},"body":{"injectables/newsService.html":{}}}],["apioperation",{"_index":254,"title":{},"body":{"controllers/newsController.html":{}}}],["apioperation({summary",{"_index":238,"title":{},"body":{"controllers/newsController.html":{}}}],["apiproperty",{"_index":274,"title":{},"body":{"classes/newsDTO.html":{}}}],["apipropertyoptional",{"_index":275,"title":{},"body":{"classes/newsDTO.html":{}}}],["apiresponse",{"_index":255,"title":{},"body":{"controllers/newsController.html":{}}}],["apiresponse({status",{"_index":245,"title":{},"body":{"controllers/newsController.html":{}}}],["apitags",{"_index":256,"title":{},"body":{"controllers/newsController.html":{}}}],["apitags('news",{"_index":259,"title":{},"body":{"controllers/newsController.html":{}}}],["app",{"_index":184,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":175,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{}}}],["articles",{"_index":242,"title":{},"body":{"controllers/newsController.html":{}}}],["async",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{}}}],["author",{"_index":224,"title":{},"body":{"index.html":{},"injectables/newsService.html":{},"properties.html":{}}}],["await",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{}}}],["axios",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":215,"title":{},"body":{"index.html":{}}}],["base_url",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":250,"title":{},"body":{"controllers/newsController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["browse",{"_index":233,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":231,"title":{},"body":{"modules.html":{}}}],["building",{"_index":170,"title":{},"body":{"index.html":{}}}],["cache",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["call",{"_index":335,"title":{},"body":{"injectables/newsService.html":{}}}],["called",{"_index":267,"title":{},"body":{"controllers/newsController.html":{}}}],["class",{"_index":21,"title":{"classes/newsDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"dependencies.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{}}}],["classes",{"_index":269,"title":{},"body":{"classes/newsDTO.html":{}}}],["client",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["client.expire",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["client.get",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["client.on('error",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["client.set",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":280,"title":{},"body":{"modules/newsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_providers",{"_index":281,"title":{},"body":{"modules/newsModule.html":{},"overview.html":{}}}],["compodoc",{"_index":199,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":132,"title":{},"body":{"dependencies.html":{}}}],["connectionidentifier",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["connectionidentifier.host",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["connectionidentifier.port",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log('contoller",{"_index":266,"title":{},"body":{"controllers/newsController.html":{}}}],["console.log('data",{"_index":332,"title":{},"body":{"injectables/newsService.html":{}}}],["console.log('emurgo",{"_index":305,"title":{},"body":{"injectables/newsService.html":{}}}],["console.log('redis",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{}}}],["constant",{"_index":117,"title":{},"body":{"coverage.html":{},"injectables/newsService.html":{},"miscellaneous/variables.html":{}}}],["constant.api_key",{"_index":317,"title":{},"body":{"injectables/newsService.html":{}}}],["constant.base_url}/search?q=example&lang=en&country=us&max=${limt}&apikey=${apikey",{"_index":323,"title":{},"body":{"injectables/newsService.html":{}}}],["constant.redis_host",{"_index":310,"title":{},"body":{"injectables/newsService.html":{}}}],["constant.redis_port",{"_index":311,"title":{},"body":{"injectables/newsService.html":{}}}],["constant.redis_prefix}_${reqbody?.limit",{"_index":313,"title":{},"body":{"injectables/newsService.html":{}}}],["constructor",{"_index":285,"title":{},"body":{"injectables/newsService.html":{}}}],["constructor(httpservice",{"_index":286,"title":{},"body":{"injectables/newsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/newsController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/newsController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"controllers/newsController.html":{}}}],["controller('news",{"_index":260,"title":{},"body":{"controllers/newsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/newsController.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["coverage",{"_index":109,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createclient",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["data",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["database",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["dataset",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{}}}],["default",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"injectables/newsService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["description",{"_index":176,"title":{},"body":{"index.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{},"properties.html":{}}}],["details",{"_index":263,"title":{},"body":{"controllers/newsController.html":{}}}],["details'})@get('/news",{"_index":248,"title":{},"body":{"controllers/newsController.html":{}}}],["development",{"_index":185,"title":{},"body":{"index.html":{}}}],["documenation",{"_index":200,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":196,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":171,"title":{},"body":{"index.html":{}}}],["emurgo",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"controllers/newsController.html":{}}}],["err",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["expiry",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["express",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["fetch",{"_index":298,"title":{},"body":{"injectables/newsService.html":{}}}],["fetching",{"_index":241,"title":{},"body":{"controllers/newsController.html":{}}}],["fetchnews",{"_index":236,"title":{},"body":{"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["fetchnews(@query",{"_index":265,"title":{},"body":{"controllers/newsController.html":{}}}],["fetchnews(data",{"_index":237,"title":{},"body":{"controllers/newsController.html":{}}}],["fetchnews(reqbody",{"_index":290,"title":{},"body":{"injectables/newsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["framework",{"_index":169,"title":{},"body":{"index.html":{}}}],["function",{"_index":120,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":163,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":297,"title":{},"body":{"injectables/newsService.html":{}}}],["get('/news",{"_index":264,"title":{},"body":{"controllers/newsController.html":{}}}],["getcachedata",{"_index":52,"title":{},"body":{"injectables/AppService.html":{}}}],["getcachedata(connectionidentifier",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getredisinstance",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["getredisinstance(connectionidentifier",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":165,"title":{"index.html":{}},"body":{}}],["grow",{"_index":211,"title":{},"body":{"index.html":{}}}],["hello",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":221,"title":{},"body":{"index.html":{}}}],["host",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{}}}],["http://127.0.0.1:8080",{"_index":203,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/emurgo/apidoc",{"_index":205,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":284,"title":{},"body":{"modules/newsModule.html":{}}}],["https://gnews.io/api/v4",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":227,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":287,"title":{},"body":{"injectables/newsService.html":{}}}],["identifier",{"_index":111,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"injectables/newsService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["injectable",{"_index":48,"title":{"injectables/AppService.html":{},"injectables/newsService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{},"injectables/newsService.html":{}}}],["injectables",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{},"overview.html":{}}}],["installation",{"_index":181,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":183,"title":{},"body":{"index.html":{}}}],["instance",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["interfaces/news.interface",{"_index":258,"title":{},"body":{"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["ioredis",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["isoptional",{"_index":276,"title":{},"body":{"classes/newsDTO.html":{}}}],["isoptional()@apipropertyoptional",{"_index":272,"title":{},"body":{"classes/newsDTO.html":{}}}],["isstring",{"_index":277,"title":{},"body":{"classes/newsDTO.html":{}}}],["join",{"_index":217,"title":{},"body":{"index.html":{}}}],["json.stringify(apidata",{"_index":330,"title":{},"body":{"injectables/newsService.html":{}}}],["key",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["lastvaluefrom",{"_index":294,"title":{},"body":{"injectables/newsService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["license",{"_index":230,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":208,"title":{},"body":{"index.html":{}}}],["limit",{"_index":271,"title":{},"body":{"classes/newsDTO.html":{}}}],["limt",{"_index":318,"title":{},"body":{"injectables/newsService.html":{}}}],["literal",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["local",{"_index":201,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":295,"title":{},"body":{"injectables/newsService.html":{}}}],["map((response",{"_index":327,"title":{},"body":{"injectables/newsService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["miscellaneous",{"_index":162,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":207,"title":{},"body":{"index.html":{}}}],["mode",{"_index":189,"title":{},"body":{"index.html":{}}}],["modifiedon",{"_index":299,"title":{},"body":{"injectables/newsService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/newsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["more",{"_index":220,"title":{},"body":{"index.html":{}}}],["n",{"_index":244,"title":{},"body":{"controllers/newsController.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["nest",{"_index":177,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":229,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":134,"title":{},"body":{"dependencies.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"controllers/newsController.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["nestjs/core",{"_index":137,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":138,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":140,"title":{},"body":{"dependencies.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{}}}],["new",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["news",{"_index":235,"title":{},"body":{"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["news.controller",{"_index":283,"title":{},"body":{"modules/newsModule.html":{}}}],["news.service",{"_index":257,"title":{},"body":{"controllers/newsController.html":{},"modules/newsModule.html":{}}}],["news/news.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["newscontroller",{"_index":124,"title":{"controllers/newsController.html":{}},"body":{"coverage.html":{},"controllers/newsController.html":{},"modules/newsModule.html":{}}}],["newsdto",{"_index":122,"title":{"classes/newsDTO.html":{}},"body":{"coverage.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"injectables/newsService.html":{}}}],["newsmodule",{"_index":40,"title":{"modules/newsModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["newsservice",{"_index":126,"title":{"injectables/newsService.html":{}},"body":{"coverage.html":{},"controllers/newsController.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{}}}],["node.js",{"_index":168,"title":{},"body":{"index.html":{}}}],["npm",{"_index":182,"title":{},"body":{"index.html":{}}}],["number",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["object",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":209,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["overview",{"_index":336,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":131,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":251,"title":{},"body":{"controllers/newsController.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["parseint(reqbody?.limit",{"_index":320,"title":{},"body":{"injectables/newsService.html":{}}}],["password",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["pipe",{"_index":326,"title":{},"body":{"injectables/newsService.html":{}}}],["please",{"_index":218,"title":{},"body":{"index.html":{}}}],["pm",{"_index":304,"title":{},"body":{"injectables/newsService.html":{}}}],["port",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"injectables/newsService.html":{}}}],["post",{"_index":252,"title":{},"body":{"controllers/newsController.html":{}}}],["prefix",{"_index":234,"title":{},"body":{"controllers/newsController.html":{}}}],["private",{"_index":296,"title":{},"body":{"injectables/newsService.html":{}}}],["processing",{"_index":308,"title":{},"body":{"injectables/newsService.html":{}}}],["production",{"_index":191,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":167,"title":{},"body":{"index.html":{}}}],["project",{"_index":210,"title":{},"body":{"index.html":{}}}],["promise",{"_index":293,"title":{},"body":{"injectables/newsService.html":{}}}],["promisify",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["promisify(client.expire",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["promisify(client.get",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["promisify(client.set",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["properties",{"_index":270,"title":{"properties.html":{}},"body":{"classes/newsDTO.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["public",{"_index":239,"title":{},"body":{"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["query",{"_index":253,"title":{},"body":{"controllers/newsController.html":{}}}],["read",{"_index":219,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/newsController.html":{}}}],["real",{"_index":334,"title":{},"body":{"injectables/newsService.html":{}}}],["redis",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"injectables/newsService.html":{}}}],["redis_host",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_port",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_prefix",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisconnectioninfo",{"_index":309,"title":{},"body":{"injectables/newsService.html":{}}}],["redisinstance",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["redisinstance.expire(key",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["redisinstance.get(key",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["redisinstance.quit",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["redisinstance.set(key",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["redisres",{"_index":314,"title":{},"body":{"injectables/newsService.html":{}}}],["redisservice",{"_index":288,"title":{},"body":{"injectables/newsService.html":{}}}],["redkey",{"_index":312,"title":{},"body":{"injectables/newsService.html":{}}}],["reflect",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":180,"title":{},"body":{"index.html":{}}}],["reqbody",{"_index":292,"title":{},"body":{"injectables/newsService.html":{}}}],["reqbody?.limit",{"_index":319,"title":{},"body":{"injectables/newsService.html":{}}}],["requrl",{"_index":322,"title":{},"body":{"injectables/newsService.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}],["response?.data",{"_index":328,"title":{},"body":{"injectables/newsService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/newsController.html":{},"injectables/newsService.html":{}}}],["rimraf",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":186,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":160,"title":{},"body":{"dependencies.html":{},"injectables/newsService.html":{}}}],["sat",{"_index":300,"title":{},"body":{"injectables/newsService.html":{}}}],["scalable",{"_index":172,"title":{},"body":{"index.html":{}}}],["sending",{"_index":333,"title":{},"body":{"injectables/newsService.html":{}}}],["server",{"_index":173,"title":{},"body":{"index.html":{}}}],["service",{"_index":306,"title":{},"body":{"injectables/newsService.html":{}}}],["setcachedata",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["setcachedata(connectionidentifier",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["shrivastava",{"_index":225,"title":{},"body":{"index.html":{},"injectables/newsService.html":{}}}],["side",{"_index":174,"title":{},"body":{"index.html":{}}}],["skip",{"_index":279,"title":{},"body":{"classes/newsDTO.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"modules/newsModule.html":{},"injectables/newsService.html":{}}}],["sponsors",{"_index":213,"title":{},"body":{"index.html":{}}}],["src/.../constant.ts",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:14",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:35",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:49",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constant.ts",{"_index":115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news/interfaces/news.interface.ts",{"_index":121,"title":{},"body":{"coverage.html":{},"classes/newsDTO.html":{}}}],["src/news/interfaces/news.interface.ts:15",{"_index":273,"title":{},"body":{"classes/newsDTO.html":{}}}],["src/news/news.controller.ts",{"_index":123,"title":{},"body":{"coverage.html":{},"controllers/newsController.html":{}}}],["src/news/news.controller.ts:20",{"_index":249,"title":{},"body":{"controllers/newsController.html":{}}}],["src/news/news.module.ts",{"_index":282,"title":{},"body":{"modules/newsModule.html":{}}}],["src/news/news.service.ts",{"_index":125,"title":{},"body":{"coverage.html":{},"injectables/newsService.html":{}}}],["src/news/news.service.ts:21",{"_index":291,"title":{},"body":{"injectables/newsService.html":{}}}],["src/news/news.service.ts:9",{"_index":289,"title":{},"body":{"injectables/newsService.html":{}}}],["start",{"_index":187,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":190,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":192,"title":{},"body":{"index.html":{}}}],["started",{"_index":166,"title":{"index.html":{}},"body":{}}],["starter",{"_index":179,"title":{},"body":{"index.html":{}}}],["statements",{"_index":112,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":262,"title":{},"body":{"controllers/newsController.html":{}}}],["stay",{"_index":222,"title":{},"body":{"index.html":{}}}],["store",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/newsDTO.html":{}}}],["successfully",{"_index":247,"title":{},"body":{"controllers/newsController.html":{}}}],["summary",{"_index":261,"title":{},"body":{"controllers/newsController.html":{}}}],["support",{"_index":206,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":232,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":204,"title":{},"body":{"index.html":{}}}],["table",{"_index":130,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":195,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":198,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":197,"title":{},"body":{"index.html":{}}}],["tests",{"_index":194,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":212,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getredisinstance",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["this.httpservice.get(requrl",{"_index":325,"title":{},"body":{"injectables/newsService.html":{}}}],["this.newsservice.fetchnews(data",{"_index":268,"title":{},"body":{"controllers/newsController.html":{}}}],["this.redisservice.getcachedata",{"_index":315,"title":{},"body":{"injectables/newsService.html":{}}}],["this.redisservice.setcachedata",{"_index":329,"title":{},"body":{"injectables/newsService.html":{}}}],["timeout",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["touch",{"_index":223,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":228,"title":{},"body":{"index.html":{}}}],["type",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"controllers/newsController.html":{},"classes/newsDTO.html":{},"injectables/newsService.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":178,"title":{},"body":{"index.html":{}}}],["unit",{"_index":193,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["unlicensed",{"_index":341,"title":{},"body":{"properties.html":{}}}],["url",{"_index":202,"title":{},"body":{"index.html":{}}}],["use",{"_index":243,"title":{},"body":{"controllers/newsController.html":{}}}],["util",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["validator",{"_index":150,"title":{},"body":{"dependencies.html":{},"classes/newsDTO.html":{}}}],["value",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":116,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":342,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":339,"title":{},"body":{"properties.html":{}}}],["walletid",{"_index":278,"title":{},"body":{"classes/newsDTO.html":{}}}],["watch",{"_index":188,"title":{},"body":{"index.html":{}}}],["website",{"_index":226,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":216,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/newsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nnewsModule\n\nnewsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nnewsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            newsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { newsModule } from './news/news.module';\n\n@Module({\n  imports: [newsModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCacheData\n                            \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                getRedisInstance\n                            \n                            \n                                    Async\n                                setCacheData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCacheData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCacheData(connectionIdentifier: literal type, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connectionIdentifier\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRedisInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRedisInstance(connectionIdentifier: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connectionIdentifier\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCacheData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCacheData(connectionIdentifier: literal type, key: string, data: any, expiry: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connectionIdentifier\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiry\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Redis } from 'ioredis';\nimport { createClient } from 'redis';\n\n\nimport { promisify } from 'util';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello Emurgo from Aashish!';\n  }\n\n  async getRedisInstance(connectionIdentifier: {\n    host: string;\n    port: string | number;\n    password?: string;\n    instance?: string;\n    database?: number;\n    timeout?: number;\n  }) {\n    const client = createClient(\n      connectionIdentifier.port,\n      connectionIdentifier.host,\n    );\n    client.on('error', (err: any) => console.log('Redis Client', err));\n    client.get = promisify(client.get);\n    client.set = promisify(client.set);\n\n    client.expire = promisify(client.expire);\n\n    return client;\n  }\n\n  async getCacheData(\n    connectionIdentifier: { host: string; port: string },\n    key: string,\n  ) {\n    const redisInstance = await this.getRedisInstance({\n      host: connectionIdentifier.host,\n      port: connectionIdentifier.port,\n    });\n\n    const dataSet = await redisInstance.get(key);\n    await redisInstance.quit();\n    return dataSet;\n  }\n\n  async setCacheData(\n    connectionIdentifier: { host: string; port: string },\n    key: string,\n    data: any,\n    expiry: number,\n  ) {\n    const redisInstance = await this.getRedisInstance({\n      host: connectionIdentifier.host,\n      port: connectionIdentifier.port,\n    });\n\n    const dataSet = await redisInstance.set(key, data);\n    if (expiry != 0) {\n      await redisInstance.expire(key, expiry);\n    }\n    await redisInstance.quit();\n    return dataSet;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/constant.ts\n            \n            variable\n            constant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news/interfaces/news.interface.ts\n            \n            class\n            newsDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/news/news.controller.ts\n            \n            controller\n            newsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/news/news.service.ts\n            \n            injectable\n            newsService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/axios : ^0.0.7\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            axios : ^1.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            redis : ^3.0.2\n        \n            ioredis : ^5.2.5\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov- Compodoc Documenation\n$ Local url\n$ npm run compodoc\nhttp://127.0.0.1:8080/\nSwagger\nLocal url\n$ http://localhost:3000/emurgo/apiDoc/\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Aashish shrivastava\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        newsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/newsController.html":{"url":"controllers/newsController.html","title":"controller - newsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  newsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fetchNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        fetchNews\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNews(data: newsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Emurgo public news API for fetching articles', description: Use this api to fetching N news articles })@ApiResponse({status: 200, description: 'Successfully Fetching news api details'})@Get('/news?')\n                \n            \n\n            \n                \n                    Defined in src/news/news.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                newsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { newsService } from './news.service';\nimport { newsDTO } from './interfaces/news.interface';\n\n@ApiTags('news')\n@Controller('news')\nexport class newsController {\n  constructor(private readonly newsService: newsService) {}\n\n  @ApiOperation({\n    summary: 'Emurgo public news API for fetching articles',\n    description: `Use this api to fetching N news articles `,\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Successfully Fetching news api details',\n  })\n  @Get('/news?')\n  fetchNews(@Query() data: newsDTO) {\n    console.log('contoller called for fetchNews', data);\n    return this.newsService.fetchNews(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/newsDTO.html":{"url":"classes/newsDTO.html","title":"class - newsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  newsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/interfaces/news.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/interfaces/news.interface.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class newsDTO {\n  // @IsOptional()\n  // @ApiProperty()\n  // walletId: string;\n\n  // @IsOptional()\n  // @ApiPropertyOptional()\n  // skip: string;\n\n  @IsOptional()\n  @ApiPropertyOptional()\n  limit: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/newsModule.html":{"url":"modules/newsModule.html","title":"module - newsModule","body":"\n                   \n\n\n\n\n    Modules\n    newsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_newsModule\n\n\n\ncluster_newsModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nnewsModule\n\nnewsModule\n\nnewsModule -->\n\nAppService->newsModule\n\n\n\n\n\nnewsService\n\nnewsService\n\nnewsModule -->\n\nnewsService->newsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            newsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            newsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { newsController } from './news.controller';\nimport { newsService } from './news.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { AppService } from '../app.service';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [newsController],\n  providers: [newsService, AppService],\n})\nexport class newsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/newsService.html":{"url":"injectables/newsService.html","title":"injectable - newsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  newsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/news.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, redisService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/news/news.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchNews\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNews(reqBody: newsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news/news.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqBody\n                                    \n                                                newsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        return news data\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { lastValueFrom, map } from 'rxjs';\nimport { newsDTO } from './interfaces/news.interface';\nimport { constant } from '../constant';\nimport { AppService } from '../app.service';\n\n@Injectable()\nexport class newsService {\n  constructor(\n    private httpService: HttpService,\n    private redisService: AppService,\n  ) {}\n\n  /**\n   * @author  Aashish Shrivastava\n   * @description fetchNews funtion fetch the data from public news api\n   * @modifiedOn - SAt 27h May 2023 - 04:58  PM\n   * @returns return news data\n   */\n  async fetchNews(reqBody: newsDTO): Promise {\n    console.log('Emurgo service 1.0 | Processing...', reqBody);\n\n    //\n    const redisConnectionInfo = {\n      host: constant.REDIS_HOST,\n      port: constant.REDIS_PORT,\n    };\n    const redKey = `${constant.REDIS_PREFIX}_${reqBody?.limit}`;\n\n    const redisRes = await this.redisService.getCacheData(\n      redisConnectionInfo,\n      redKey,\n    );\n\n    if (!redisRes) {\n      const apikey = constant.API_KEY;\n      const limt = reqBody?.limit ? parseInt(reqBody?.limit) : 10;\n\n      const reqUrl = `${constant.BASE_URL}/search?q=example&lang=en&country=us&max=${limt}&apikey=${apikey}`;\n\n      const apiData = await lastValueFrom(\n        this.httpService.get(reqUrl, {}).pipe(\n          map((response) => {\n            return response?.data;\n          }),\n        ),\n      );\n\n      await this.redisService.setCacheData(\n        redisConnectionInfo,\n        redKey,\n        JSON.stringify(apiData),\n        3600,\n      );\n\n      console.log('data sending from real api call');\n\n      return apiData;\n    } else {\n      console.log('data sending from redis call');\n      return redisRes;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_newsModule\n\n\n\ncluster_newsModule_providers\n\n\n\n\nnewsModule\n\nnewsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nnewsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nnewsModule -->\n\nAppService->newsModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nnewsService\n\nnewsService\n\nnewsModule -->\n\nnewsService->newsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            constant   (src/.../constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  API_KEY: '6a8a2f6474743742063ba405c564bc28',\n  BASE_URL: 'https://gnews.io/api/v4',\n  REDIS_HOST: 'localhost',\n  REDIS_PORT: '6379',\n  REDIS_PREFIX: 'Aashish',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
